name: Deploy to Azure Container Registry

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

env:
  REGISTRY_NAME: coursehubregistry
  IMAGE_NAME: coursehub-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Build and publish
      run: |
        dotnet restore
        dotnet build --configuration Release --no-restore
        dotnet publish --configuration Release --output ./publish --no-build
        
    - name: Create Dockerfile
      run: |
        echo "FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base" > Dockerfile
        echo "WORKDIR /app" >> Dockerfile
        echo "EXPOSE 80" >> Dockerfile
        echo "EXPOSE 443" >> Dockerfile
        echo "" >> Dockerfile
        echo "FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build" >> Dockerfile
        echo "WORKDIR /src" >> Dockerfile
        echo "COPY [\"CourseHubApi/CourseHubApi.csproj\", \"CourseHubApi/\"]" >> Dockerfile
        echo "RUN dotnet restore \"CourseHubApi/CourseHubApi.csproj\"" >> Dockerfile
        echo "COPY . ." >> Dockerfile
        echo "WORKDIR \"/src/CourseHubApi\"" >> Dockerfile
        echo "RUN dotnet build \"CourseHubApi.csproj\" -c Release -o /app/build" >> Dockerfile
        echo "" >> Dockerfile
        echo "FROM build AS publish" >> Dockerfile
        echo "RUN dotnet publish \"CourseHubApi.csproj\" -c Release -o /app/publish" >> Dockerfile
        echo "" >> Dockerfile
        echo "FROM base AS final" >> Dockerfile
        echo "WORKDIR /app" >> Dockerfile
        echo "COPY --from=publish /app/publish ." >> Dockerfile
        echo "ENTRYPOINT [\"dotnet\", \"CourseHubApi.dll\"]" >> Dockerfile
        
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Build and push image
      run: |
        docker build -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} 